http {
    lua_shared_dict captcha_passed 60m;

    server {
        listen 80;
        server_name localhost;

        location / {

            access_by_lua_block {
                local http = require "resty.http"
                local captcha_passed = ngx.shared.captcha_passed

                -- Extract IP
                local ip = ngx.var.remote_addr

                -- Check if IP has already passed the captcha
                if captcha_passed:get(ip) then
                    return  -- Continue processing if captcha has been passed
                end

                -- Make an HTTP request to the Go backend
                local httpc = http.new()
                local res, err = httpc:request_uri("http://127.0.0.1:8080", {
                    method = "GET",
                    headers = {
                        ["X-Real-IP"] = ngx.var.remote_addr,
                        ["X-Forwarded-For"] = ngx.var.http_x_forwarded_for,
                        ["X-Forwarded-Proto"] = ngx.var.scheme,
                    },
                })

                if not res then
                    ngx.log(ngx.ERR, "Failed to request: ", err)
                    return ngx.exit(500)
                end

                if res.status == 200 then
                    return  -- Continue processing the current request
                elseif res.status == 403 then
                    return ngx.exit(403)
                elseif res.status == 429 then
                    return ngx.exit(429)
                else
                    ngx.log(ngx.ERR, "Unexpected status: ", res.status)
                    return ngx.exit(500)
                end
            }
        }
    }
}
